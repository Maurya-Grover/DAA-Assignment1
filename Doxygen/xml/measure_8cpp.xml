<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="measure_8cpp" kind="file" language="C++">
    <compoundname>measure.cpp</compoundname>
    <includes local="no">bits/stdc++.h</includes>
    <incdepgraph>
      <node id="2">
        <label>bits/stdc++.h</label>
      </node>
      <node id="1">
        <label>src/measure.cpp</label>
        <link refid="measure_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_point" prot="public">Point</innerclass>
    <innerclass refid="class_interval" prot="public">Interval</innerclass>
    <innerclass refid="class_line_segment" prot="public">LineSegment</innerclass>
    <innerclass refid="class_rectangle" prot="public">Rectangle</innerclass>
    <innerclass refid="class_edge" prot="public">Edge</innerclass>
    <innerclass refid="class_stripe" prot="public">Stripe</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="measure_8cpp_1a5d5491a033f24fc98ebe40b66cd72292" prot="public" static="no">
        <name>tplate</name>
        <initializer>template &lt;typename T = long double&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="2" column="10" bodyfile="src/measure.cpp" bodystart="2" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="measure_8cpp_1ad52913e7ca10a2990164cad17518661b" prot="public" static="no" mutable="no">
        <type>tplate const T</type>
        <definition>tplate const T inf</definition>
        <argsstring></argsstring>
        <name>inf</name>
        <initializer>= numeric_limits&lt;T&gt;::infinity()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="5" column="16" bodyfile="src/measure.cpp" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="measure_8cpp_1a0ca07b15ddc8eb2a0e4a2d059de58d09" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string edgetype[]</definition>
        <argsstring>[]</argsstring>
        <name>edgetype</name>
        <initializer>= {&quot;top&quot;, &quot;bottom&quot;, &quot;left&quot;, &quot;right&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="229" column="8" bodyfile="src/measure.cpp" bodystart="229" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="measure_8cpp_1a6d977491725b45d2e06000dc63323928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>set&lt; T &gt;</type>
        <definition>set&lt;T&gt; operator-</definition>
        <argsstring>(set&lt; T &gt; reference, set&lt; T &gt; items_to_remove)</argsstring>
        <name>operator-</name>
        <param>
          <type>set&lt; T &gt;</type>
          <declname>reference</declname>
        </param>
        <param>
          <type>set&lt; T &gt;</type>
          <declname>items_to_remove</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="119" column="5" bodyfile="src/measure.cpp" bodystart="119" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="measure_8cpp_1a96bd7f5c48e11f3ba41f738bd7c42382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>set&lt; T &gt;</type>
        <definition>set&lt;T&gt; operator+</definition>
        <argsstring>(set&lt; T &gt; reference, set&lt; T &gt; items_to_remove)</argsstring>
        <name>operator+</name>
        <param>
          <type>set&lt; T &gt;</type>
          <declname>reference</declname>
        </param>
        <param>
          <type>set&lt; T &gt;</type>
          <declname>items_to_remove</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="131" column="5" bodyfile="src/measure.cpp" bodystart="131" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="measure_8cpp_1a05054fec29006c52dfa1e60c498e7ff0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>set&lt; T &gt;</type>
        <definition>set&lt;T&gt; operator^</definition>
        <argsstring>(set&lt; T &gt; reference, set&lt; T &gt; items_to_remove)</argsstring>
        <name>operator^</name>
        <param>
          <type>set&lt; T &gt;</type>
          <declname>reference</declname>
        </param>
        <param>
          <type>set&lt; T &gt;</type>
          <declname>items_to_remove</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="143" column="5" bodyfile="src/measure.cpp" bodystart="143" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="measure_8cpp_1a773c5ed83e49192035dcf22fd89e90ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tplate set&lt; <ref refid="class_point" kindref="compound">Point</ref>&lt; T &gt; &gt;</type>
        <definition>tplate set&lt;Point&lt;T&gt; &gt; unionArea</definition>
        <argsstring>(set&lt; Rectangle&lt; T &gt;&gt; r)</argsstring>
        <name>unionArea</name>
        <param>
          <type>set&lt; <ref refid="class_rectangle" kindref="compound">Rectangle</ref>&lt; T &gt;&gt;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="155" column="5" bodyfile="src/measure.cpp" bodystart="155" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="measure_8cpp_1a26f0a708de6756f9e5aa6d7aeb60824b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tplate set&lt; T &gt;</type>
        <definition>tplate set&lt;T&gt; y_set</definition>
        <argsstring>(set&lt; Rectangle&lt; T &gt;&gt; R)</argsstring>
        <name>y_set</name>
        <param>
          <type>set&lt; <ref refid="class_rectangle" kindref="compound">Rectangle</ref>&lt; T &gt;&gt;</type>
          <declname>R</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="171" column="5" bodyfile="src/measure.cpp" bodystart="171" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="measure_8cpp_1ab16d200ba45556c0ea27f9ad1d0cabf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tplate set&lt; <ref refid="class_interval" kindref="compound">Interval</ref>&lt; T &gt; &gt;</type>
        <definition>tplate set&lt;Interval&lt;T&gt; &gt; partition</definition>
        <argsstring>(set&lt; T &gt; Y)</argsstring>
        <name>partition</name>
        <param>
          <type>set&lt; T &gt;</type>
          <declname>Y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="183" column="5" bodyfile="src/measure.cpp" bodystart="183" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="measure_8cpp_1a33a31ce3be4aa7c49b55d730ff35f1f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tplate set&lt; T &gt;</type>
        <definition>tplate set&lt;T&gt; x_proj</definition>
        <argsstring>(set&lt; Point&lt; T &gt;&gt; P)</argsstring>
        <name>x_proj</name>
        <param>
          <type>set&lt; <ref refid="class_point" kindref="compound">Point</ref>&lt; T &gt;&gt;</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="198" column="5" bodyfile="src/measure.cpp" bodystart="198" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="measure_8cpp_1af07307493d0e6d32476b2d221ba62c73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tplate set&lt; <ref refid="class_interval" kindref="compound">Interval</ref>&lt; T &gt; &gt;</type>
        <definition>tplate set&lt;Interval&lt;T&gt; &gt; intervals</definition>
        <argsstring>(set&lt; T &gt; Coord)</argsstring>
        <name>intervals</name>
        <param>
          <type>set&lt; T &gt;</type>
          <declname>Coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="208" column="5" bodyfile="src/measure.cpp" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="measure_8cpp_1a2b9068cdf79195a2f5543b9e8d4d1c18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tplate set&lt; <ref refid="class_stripe" kindref="compound">Stripe</ref>&lt; T &gt; &gt;</type>
        <definition>tplate set&lt;Stripe&lt;T&gt; &gt; stripes</definition>
        <argsstring>(set&lt; Rectangle&lt; T &gt;&gt; R, Rectangle&lt; T &gt; f)</argsstring>
        <name>stripes</name>
        <param>
          <type>set&lt; <ref refid="class_rectangle" kindref="compound">Rectangle</ref>&lt; T &gt;&gt;</type>
          <declname>R</declname>
        </param>
        <param>
          <type><ref refid="class_rectangle" kindref="compound">Rectangle</ref>&lt; T &gt;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="214" column="5" bodyfile="src/measure.cpp" bodystart="214" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="measure_8cpp_1a4be3178befc1a7813b7717a591ceb97e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tplate set&lt; <ref refid="class_stripe" kindref="compound">Stripe</ref>&lt; T &gt; &gt;</type>
        <definition>tplate set&lt;Stripe&lt;T&gt; &gt; Copy</definition>
        <argsstring>(set&lt; Stripe&lt; T &gt;&gt; S, set&lt; T &gt; P, Interval&lt; T &gt; x_int)</argsstring>
        <name>Copy</name>
        <param>
          <type>set&lt; <ref refid="class_stripe" kindref="compound">Stripe</ref>&lt; T &gt;&gt;</type>
          <declname>S</declname>
        </param>
        <param>
          <type>set&lt; T &gt;</type>
          <declname>P</declname>
        </param>
        <param>
          <type><ref refid="class_interval" kindref="compound">Interval</ref>&lt; T &gt;</type>
          <declname>x_int</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="233" column="5" bodyfile="src/measure.cpp" bodystart="233" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="measure_8cpp_1aee8d30ff2a8b49953ed35316b1160111" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tplate void</type>
        <definition>tplate void Blacken</definition>
        <argsstring>(set&lt; Stripe&lt; T &gt;&gt; &amp;S, set&lt; Interval&lt; T &gt;&gt; J)</argsstring>
        <name>Blacken</name>
        <param>
          <type>set&lt; <ref refid="class_stripe" kindref="compound">Stripe</ref>&lt; T &gt;&gt; &amp;</type>
          <declname>S</declname>
        </param>
        <param>
          <type>set&lt; <ref refid="class_interval" kindref="compound">Interval</ref>&lt; T &gt;&gt;</type>
          <declname>J</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="251" column="13" bodyfile="src/measure.cpp" bodystart="251" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="measure_8cpp_1a88921521574b40fbfbc4177d807aab00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tplate set&lt; <ref refid="class_stripe" kindref="compound">Stripe</ref>&lt; T &gt; &gt;</type>
        <definition>tplate set&lt;Stripe&lt;T&gt; &gt; Concat</definition>
        <argsstring>(set&lt; Stripe&lt; T &gt;&gt; S1, set&lt; Stripe&lt; T &gt;&gt; S2, set&lt; T &gt; P, Interval&lt; T &gt; x_int)</argsstring>
        <name>Concat</name>
        <param>
          <type>set&lt; <ref refid="class_stripe" kindref="compound">Stripe</ref>&lt; T &gt;&gt;</type>
          <declname>S1</declname>
        </param>
        <param>
          <type>set&lt; <ref refid="class_stripe" kindref="compound">Stripe</ref>&lt; T &gt;&gt;</type>
          <declname>S2</declname>
        </param>
        <param>
          <type>set&lt; T &gt;</type>
          <declname>P</declname>
        </param>
        <param>
          <type><ref refid="class_interval" kindref="compound">Interval</ref>&lt; T &gt;</type>
          <declname>x_int</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="269" column="5" bodyfile="src/measure.cpp" bodystart="269" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="measure_8cpp_1a2e69c2e37ddc89d4ae7d69cdfec51695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tplate set&lt; <ref refid="class_stripe" kindref="compound">Stripe</ref>&lt; T &gt; &gt;</type>
        <definition>tplate set&lt;Stripe&lt;T&gt; &gt; STRIPES</definition>
        <argsstring>(vector&lt; Edge&lt; T &gt;&gt; &amp;V, Interval&lt; T &gt; &amp;x_ext, set&lt; Interval&lt; T &gt;&gt; &amp;L, set&lt; Interval&lt; T &gt;&gt; &amp;R, set&lt; T &gt; &amp;P)</argsstring>
        <name>STRIPES</name>
        <param>
          <type>vector&lt; <ref refid="class_edge" kindref="compound">Edge</ref>&lt; T &gt;&gt; &amp;</type>
          <declname>V</declname>
        </param>
        <param>
          <type><ref refid="class_interval" kindref="compound">Interval</ref>&lt; T &gt; &amp;</type>
          <declname>x_ext</declname>
        </param>
        <param>
          <type>set&lt; <ref refid="class_interval" kindref="compound">Interval</ref>&lt; T &gt;&gt; &amp;</type>
          <declname>L</declname>
        </param>
        <param>
          <type>set&lt; <ref refid="class_interval" kindref="compound">Interval</ref>&lt; T &gt;&gt; &amp;</type>
          <declname>R</declname>
        </param>
        <param>
          <type>set&lt; T &gt; &amp;</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="301" column="5" bodyfile="src/measure.cpp" bodystart="301" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="measure_8cpp_1a26986a52c53e5df8a4066ffb9f3e4f61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tplate set&lt; <ref refid="class_stripe" kindref="compound">Stripe</ref>&lt; T &gt; &gt;</type>
        <definition>tplate set&lt;Stripe&lt;T&gt; &gt; RECTANGLE_DAC</definition>
        <argsstring>(set&lt; Rectangle&lt; T &gt;&gt; RECT)</argsstring>
        <name>RECTANGLE_DAC</name>
        <param>
          <type>set&lt; <ref refid="class_rectangle" kindref="compound">Rectangle</ref>&lt; T &gt;&gt;</type>
          <declname>RECT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="430" column="5" bodyfile="src/measure.cpp" bodystart="430" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="measure_8cpp_1abf9e6b7e6f15df4b525a2e7705ba3089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char const *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/measure.cpp" line="448" column="5" bodyfile="src/measure.cpp" bodystart="448" bodyend="494"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;bits/stdc++.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>tplate<sp/>template<sp/>&lt;typename<sp/>T<sp/>=<sp/>long<sp/>double&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">tplate<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>inf<sp/>=<sp/>numeric_limits&lt;T&gt;::infinity();</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">tplate<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_point" kindref="compound">Point</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_point" kindref="compound">Point</ref>(T<sp/>a,<sp/>T<sp/>b)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_point" kindref="compound">Point</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="17"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;x<sp/>&lt;<sp/>other.<ref refid="class_point_1a7b04e347ca432a272bf460976add94eb" kindref="member">x</ref><sp/>or<sp/>(this-&gt;x<sp/>==<sp/>other.<ref refid="class_point_1a7b04e347ca432a272bf460976add94eb" kindref="member">x</ref><sp/>and<sp/>this-&gt;y<sp/>&lt;<sp/>other.<ref refid="class_point_1ae94d49fe77a3568cff61dd589c0feabd" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal">};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">tplate<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_interval" kindref="compound">Interval</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>top,<sp/>bottom;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_interval" kindref="compound">Interval</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_interval" kindref="compound">Interval</ref>(T<sp/>b,<sp/>T<sp/>t)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_interval" kindref="compound">Interval</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="33"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;bottom<sp/>&lt;<sp/>other.<ref refid="class_interval_1a097694b6079fdb99d67561962c163cdc" kindref="member">bottom</ref><sp/>or<sp/>(this-&gt;bottom<sp/>==<sp/>other.<ref refid="class_interval_1a097694b6079fdb99d67561962c163cdc" kindref="member">bottom</ref><sp/>and<sp/>this-&gt;top<sp/>&lt;<sp/>other.<ref refid="class_interval_1a815cb5fb627ed4553c42b987d41e2fa6" kindref="member">top</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_interval" kindref="compound">Interval</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="37"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;bottom<sp/>==<sp/>other.<ref refid="class_interval_1a097694b6079fdb99d67561962c163cdc" kindref="member">bottom</ref><sp/>and<sp/>this-&gt;top<sp/>==<sp/>other.<ref refid="class_interval_1a815cb5fb627ed4553c42b987d41e2fa6" kindref="member">top</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">tplate<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_line_segment" kindref="compound">LineSegment</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>interval;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>coord;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_line_segment" kindref="compound">LineSegment</ref>(<ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>inter,<sp/>T<sp/>co)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interval<sp/>=<sp/>inter;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord<sp/>=<sp/>co;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_line_segment" kindref="compound">LineSegment</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="53"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;coord<sp/>&lt;<sp/>other.<ref refid="class_line_segment_1abb08ceb9ae3a0e3490fe3f6268ca2d1e" kindref="member">coord</ref><sp/>or<sp/>(this-&gt;coord<sp/>==<sp/>other.<ref refid="class_line_segment_1abb08ceb9ae3a0e3490fe3f6268ca2d1e" kindref="member">coord</ref><sp/>and<sp/>this-&gt;interval<sp/>&lt;<sp/>other.<ref refid="class_line_segment_1a283fb72cefd23fb13b9937db13db07a3" kindref="member">interval</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">tplate<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_rectangle" kindref="compound">Rectangle</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>x_left,<sp/>x_right,<sp/>y_bottom,<sp/>y_top;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>x_interval,<sp/>y_interval;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_rectangle" kindref="compound">Rectangle</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_rectangle" kindref="compound">Rectangle</ref>(T<sp/>x1,<sp/>T<sp/>x2,<sp/>T<sp/>y1,<sp/>T<sp/>y2)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_left<sp/>=<sp/>min(x1,<sp/>x2);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_right<sp/>=<sp/>max(x1,<sp/>x2);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_bottom<sp/>=<sp/>min(y1,<sp/>y2);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_top<sp/>=<sp/>max(y1,<sp/>y2);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_interval<sp/>=<sp/><ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref>(x_left,<sp/>x_right);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_interval<sp/>=<sp/><ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref>(y_bottom,<sp/>y_top);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_rectangle" kindref="compound">Rectangle</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="74"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;x_left<sp/>&lt;<sp/>other.<ref refid="class_rectangle_1abe15cf834233e0c05a2f47f1878d3d70" kindref="member">x_left</ref><sp/>or<sp/>(this-&gt;x_left<sp/>==<sp/>other.<ref refid="class_rectangle_1abe15cf834233e0c05a2f47f1878d3d70" kindref="member">x_left</ref><sp/>and<sp/>this-&gt;x_right<sp/>&lt;<sp/>other.<ref refid="class_rectangle_1ac2c6b9f4bb45515bab7029eabaff3966" kindref="member">x_right</ref>)<sp/>or<sp/>(this-&gt;x_left<sp/>==<sp/>other.x_left<sp/>and<sp/>this-&gt;x_right<sp/>==<sp/>other.x_right<sp/>and<sp/>this-&gt;y_bottom<sp/>&lt;<sp/>other.y_bottom)<sp/>or<sp/>(this-&gt;x_left<sp/>==<sp/>other.x_left<sp/>and<sp/>this-&gt;x_right<sp/>==<sp/>other.x_right<sp/>and<sp/>this-&gt;y_bottom<sp/>==<sp/>other.y_bottom<sp/>and<sp/>this-&gt;y_top<sp/>&lt;<sp/>other.y_top);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//Check<sp/>operator<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">tplate<sp/>class<sp/><ref refid="class_edge" kindref="compound">Edge</ref></highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>interval;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>coord;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>side;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_edge" kindref="compound">Edge</ref>(<ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>inter,<sp/>T<sp/>co,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sid)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interval<sp/>=<sp/>inter;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord<sp/>=<sp/>co;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>side<sp/>=<sp/>sid;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_edge" kindref="compound">Edge</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="94"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;coord<sp/>&lt;<sp/>other.<ref refid="class_edge_1a9135fbe9d02327917295da09c9241288" kindref="member">coord</ref><sp/>or<sp/>(this-&gt;coord<sp/>==<sp/>other.<ref refid="class_edge_1a9135fbe9d02327917295da09c9241288" kindref="member">coord</ref><sp/>and<sp/>this-&gt;side<sp/>&lt;<sp/>other.<ref refid="class_edge_1a9c9ddeaf613656905768aee53fa83bc2" kindref="member">side</ref>)<sp/>or<sp/>(this-&gt;coord<sp/>==<sp/>other.coord<sp/>and<sp/>this-&gt;side<sp/>==<sp/>other.side<sp/>and<sp/>this-&gt;interval<sp/>&lt;<sp/>other.interval);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">tplate<sp/>class<sp/><ref refid="class_stripe" kindref="compound">Stripe</ref></highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>x_interval,<sp/>y_interval;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>x_measure;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_stripe" kindref="compound">Stripe</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_stripe" kindref="compound">Stripe</ref>(<ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>x,<sp/><ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>y,<sp/>T<sp/>m)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_interval<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_interval<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_measure<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_stripe" kindref="compound">Stripe</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="112"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;x_interval<sp/>&lt;<sp/>other.<ref refid="class_stripe_1af8bb1debe410a17f8edaf383d33759c2" kindref="member">x_interval</ref><sp/>or<sp/>(this-&gt;x_interval<sp/>==<sp/>other.<ref refid="class_stripe_1af8bb1debe410a17f8edaf383d33759c2" kindref="member">x_interval</ref><sp/>and<sp/>this-&gt;y_interval<sp/>&lt;<sp/>other.<ref refid="class_stripe_1af3f5befebfee49801fae5ff7f99a971f" kindref="member">y_interval</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>difference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">set&lt;T&gt;<sp/><ref refid="contour_8cpp_1a772ecb70052d9fec85cb17d522cf0b98" kindref="member">operator-</ref>(set&lt;T&gt;<sp/>reference,<sp/>set&lt;T&gt;<sp/>items_to_remove)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;T&gt;<sp/>result;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set_difference(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference.begin(),<sp/>reference.end(),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items_to_remove.begin(),<sp/>items_to_remove.end(),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::inserter(result,<sp/>result.end()));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">set&lt;T&gt;<sp/><ref refid="contour_8cpp_1aa40ddb60d05174c2928e39506d3940c4" kindref="member">operator+</ref>(set&lt;T&gt;<sp/>reference,<sp/>set&lt;T&gt;<sp/>items_to_remove)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;T&gt;<sp/>result;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set_union(</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference.begin(),<sp/>reference.end(),</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items_to_remove.begin(),<sp/>items_to_remove.end(),</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::inserter(result,<sp/>result.end()));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>intersection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">set&lt;T&gt;<sp/><ref refid="contour_8cpp_1ad34946e00ecf6b563d8cbdaaa19e9be2" kindref="member">operator^</ref>(set&lt;T&gt;<sp/>reference,<sp/>set&lt;T&gt;<sp/>items_to_remove)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;T&gt;<sp/>result;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set_intersection(</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference.begin(),<sp/>reference.end(),</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items_to_remove.begin(),<sp/>items_to_remove.end(),</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::inserter(result,<sp/>result.end()));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">tplate</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Point&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>unionArea(set&lt;<ref refid="class_rectangle" kindref="compound">Rectangle&lt;T&gt;</ref>&gt;<sp/>r)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Point&lt;T&gt;&gt;<sp/>result;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>e<sp/>:<sp/>r)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>e.x_left<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>e.x_right<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>e.y_bottom<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>e.y_top;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.insert(<ref refid="class_point" kindref="compound">Point&lt;T&gt;</ref>(e.x_left,<sp/>e.y_top));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.insert(<ref refid="class_point" kindref="compound">Point&lt;T&gt;</ref>(e.x_right,<sp/>e.y_top));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.insert(<ref refid="class_point" kindref="compound">Point&lt;T&gt;</ref>(e.x_right,<sp/>e.y_bottom));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.insert(<ref refid="class_point" kindref="compound">Point&lt;T&gt;</ref>(e.x_left,<sp/>e.y_bottom));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">tplate</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;T&gt;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>y_set(set&lt;<ref refid="class_rectangle" kindref="compound">Rectangle&lt;T&gt;</ref>&gt;<sp/>R)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;T&gt;<sp/>coord;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>:<sp/>R)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.insert(r.y_top);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.insert(r.y_bottom);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">tplate</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Interval&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="contour_8cpp_1ab16d200ba45556c0ea27f9ad1d0cabf7" kindref="member">partition</ref>(set&lt;T&gt;<sp/>Y)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Interval&lt;T&gt;&gt;<sp/>result;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;T&gt;<sp/>Y_vec(Y.begin(),<sp/>Y.end());</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Our<sp/><sp/>Interpretation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>does<sp/>not<sp/>exist<sp/>a<sp/>y<sp/>belong<sp/>to<sp/>Y<sp/>such<sp/>that<sp/>(y1<sp/>&lt;<sp/>y<sp/>and<sp/><sp/>y<sp/>&lt;<sp/>y2)<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>we&apos;ll<sp/>take<sp/>only<sp/>consecutive<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>Y_vec.size();<sp/>i++)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.insert(<ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref>(Y_vec[i<sp/>-<sp/>1],<sp/>Y_vec[i]));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">tplate</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;T&gt;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>x_proj(set&lt;<ref refid="class_point" kindref="compound">Point&lt;T&gt;</ref>&gt;<sp/>P)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;T&gt;<sp/>coord;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>:<sp/>P)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.insert(p.x);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coord;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">tplate</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Interval&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="contour_8cpp_1a61c5649124b88d81645beb82810e64b3" kindref="member">intervals</ref>(set&lt;T&gt;<sp/>Coord)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">tplate</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Stripe&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>stripes(set&lt;<ref refid="class_rectangle" kindref="compound">Rectangle&lt;T&gt;</ref>&gt;<sp/>R,<sp/><ref refid="class_rectangle" kindref="compound">Rectangle&lt;T&gt;</ref><sp/>f)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;T&gt;<sp/>Y<sp/>=<sp/>y_set(R);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>Y.insert(f.<ref refid="class_rectangle_1a257b3c526ee43133e00bb96ff300a5b1" kindref="member">y_bottom</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>Y.insert(f.<ref refid="class_rectangle_1af7531ef71919be7a3d7aa76beeb79e2a" kindref="member">y_top</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i_x<sp/>=<sp/>f.<ref refid="class_rectangle_1ac79b18455c7d03eac075eb1000249a43" kindref="member">x_interval</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Interval&lt;T&gt;&gt;<sp/>y_part<sp/>=<sp/><ref refid="contour_8cpp_1ab16d200ba45556c0ea27f9ad1d0cabf7" kindref="member">partition</ref>(Y);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i_y<sp/>:<sp/>y_part)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;Point&lt;T&gt;&gt;<sp/>intersect;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i_set<sp/>=<sp/><ref refid="contour_8cpp_1a61c5649124b88d81645beb82810e64b3" kindref="member">intervals</ref>(x_proj(intersect));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tuple&lt;Interval&lt;T&gt;,<sp/><ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref>,<sp/>set&lt;Interval&lt;T&gt;&gt;&gt;<sp/>t;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>edgetype[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;top&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bottom&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;left&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;right&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">tplate</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Stripe&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="contour_8cpp_1a4be3178befc1a7813b7717a591ceb97e" kindref="member">Copy</ref>(set&lt;<ref refid="class_stripe" kindref="compound">Stripe&lt;T&gt;</ref>&gt;<sp/>S,<sp/>set&lt;T&gt;<sp/>P,<sp/><ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>x_int)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;Enter<sp/>Copy\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Stripe&lt;T&gt;&gt;<sp/>S2,<sp/>S_;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i_x<sp/>=<sp/>x_int;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set&lt;Interval&lt;T&gt;&gt;<sp/>part<sp/>=<sp/>partition(P);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i_y<sp/>:<sp/><ref refid="contour_8cpp_1ab16d200ba45556c0ea27f9ad1d0cabf7" kindref="member">partition</ref>(P))</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S2.insert({i_x,<sp/>i_y,<sp/>0});</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_stripe" kindref="compound">Stripe&lt;T&gt;</ref><sp/>s2<sp/>:<sp/>S2)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_stripe" kindref="compound">Stripe&lt;T&gt;</ref><sp/>s<sp/>:<sp/>S)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.y_interval.bottom<sp/>&lt;=<sp/>s2.y_interval.bottom<sp/>and<sp/>s.y_interval.top<sp/>&gt;=<sp/>s2.y_interval.top)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2.x_measure<sp/>=<sp/>s.x_measure;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S_.insert(s2);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">tplate<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="contour_8cpp_1aee8d30ff2a8b49953ed35316b1160111" kindref="member">Blacken</ref>(set&lt;<ref refid="class_stripe" kindref="compound">Stripe&lt;T&gt;</ref>&gt;<sp/>&amp;S,<sp/>set&lt;<ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref>&gt;<sp/>J)</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;Enter<sp/>Blacken\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Stripe&lt;T&gt;&gt;<sp/>S_;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_stripe" kindref="compound">Stripe&lt;T&gt;</ref><sp/>s<sp/>:<sp/>S)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>i<sp/>:<sp/>J)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.y_interval.bottom<sp/>&gt;=<sp/>i.bottom<sp/>and<sp/>s.y_interval.top<sp/>&lt;=<sp/>i.top)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.x_interval.bottom<sp/>!=<sp/>-inf&lt;long<sp/>double&gt;<sp/>and<sp/>s.x_interval.top<sp/>!=<sp/>inf&lt;long<sp/>double&gt;)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.x_measure<sp/>=<sp/>s.x_interval.top<sp/>-<sp/>s.x_interval.bottom;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S_.insert(s);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>S.clear();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>S.insert(S_.begin(),<sp/>S_.end());</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">tplate</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Stripe&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="contour_8cpp_1a88921521574b40fbfbc4177d807aab00" kindref="member">Concat</ref>(set&lt;<ref refid="class_stripe" kindref="compound">Stripe&lt;T&gt;</ref>&gt;<sp/>S1,<sp/>set&lt;<ref refid="class_stripe" kindref="compound">Stripe&lt;T&gt;</ref>&gt;<sp/>S2,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;T&gt;<sp/>P,<sp/><ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>x_int)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;Enter<sp/>Concat\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Stripe&lt;T&gt;&gt;<sp/>S;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i_x<sp/>=<sp/>x_int;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Interval&lt;T&gt;&gt;<sp/>part<sp/>=<sp/><ref refid="contour_8cpp_1ab16d200ba45556c0ea27f9ad1d0cabf7" kindref="member">partition</ref>(P);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i_y<sp/>:<sp/>part)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.insert({i_x,<sp/>i_y,<sp/>0});</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Stripe&lt;T&gt;&gt;<sp/>S_;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_stripe" kindref="compound">Stripe&lt;T&gt;</ref><sp/>s1_,<sp/>s2_;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_stripe" kindref="compound">Stripe&lt;T&gt;</ref><sp/>s<sp/>:<sp/>S)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1_.x_measure<sp/>=<sp/>s2_.x_measure<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_stripe" kindref="compound">Stripe&lt;T&gt;</ref><sp/>s1<sp/>:<sp/>S1)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s1.y_interval<sp/>==<sp/>s.y_interval)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1_<sp/>=<sp/>s1;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_stripe" kindref="compound">Stripe&lt;T&gt;</ref><sp/>s2<sp/>:<sp/>S2)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2.y_interval<sp/>==<sp/>s.y_interval)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2_<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.x_measure<sp/>=<sp/>s1_.x_measure<sp/>+<sp/>s2_.x_measure;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S_.insert(s);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(Stripe&lt;T&gt;<sp/>s<sp/>:<sp/>S_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deb(s.y_interval.bottom),deb(s.x_measure);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">tplate</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Stripe&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="contour_8cpp_1a2e69c2e37ddc89d4ae7d69cdfec51695" kindref="member">STRIPES</ref>(vector&lt;<ref refid="class_edge" kindref="compound">Edge&lt;T&gt;</ref>&gt;<sp/>&amp;V,<sp/><ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>&amp;x_ext,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;<ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref>&gt;<sp/>&amp;L,<sp/>set&lt;<ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref>&gt;<sp/>&amp;R,<sp/>set&lt;T&gt;<sp/>&amp;P)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;Enter<sp/>STRIPES\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Stripe&lt;T&gt;&gt;<sp/>S,<sp/>S_;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(V.size()<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_edge" kindref="compound">Edge&lt;T&gt;</ref><sp/>v<sp/>=<sp/>*(V.begin());</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P<sp/>=<sp/>{{-inf&lt;T&gt;,<sp/>v.<ref refid="class_edge_1af976f1207ea1bf4bb0d6c025247739ee" kindref="member">interval</ref>.<ref refid="class_interval_1a097694b6079fdb99d67561962c163cdc" kindref="member">bottom</ref>,<sp/>v.<ref refid="class_edge_1af976f1207ea1bf4bb0d6c025247739ee" kindref="member">interval</ref>.<ref refid="class_interval_1a815cb5fb627ed4553c42b987d41e2fa6" kindref="member">top</ref>,<sp/>inf&lt;T&gt;}};</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i_x<sp/>=<sp/>x_ext;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set&lt;Interval&lt;T&gt;&gt;<sp/>part<sp/>=<sp/>partition(P);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i_y<sp/>:<sp/><ref refid="contour_8cpp_1ab16d200ba45556c0ea27f9ad1d0cabf7" kindref="member">partition</ref>(P))</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.insert({i_x,<sp/>i_y,<sp/>0});</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.<ref refid="class_edge_1a9c9ddeaf613656905768aee53fa83bc2" kindref="member">side</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;left&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L.insert(v.<ref refid="class_edge_1af976f1207ea1bf4bb0d6c025247739ee" kindref="member">interval</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R.insert(v.<ref refid="class_edge_1af976f1207ea1bf4bb0d6c025247739ee" kindref="member">interval</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_stripe" kindref="compound">Stripe&lt;T&gt;</ref><sp/>s<sp/>:<sp/>S)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.y_interval<sp/>==<sp/>v.<ref refid="class_edge_1af976f1207ea1bf4bb0d6c025247739ee" kindref="member">interval</ref>)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.<ref refid="class_edge_1a9c9ddeaf613656905768aee53fa83bc2" kindref="member">side</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;left&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.x_measure<sp/>=<sp/>x_ext.<ref refid="class_interval_1a815cb5fb627ed4553c42b987d41e2fa6" kindref="member">top</ref><sp/>-<sp/>v.<ref refid="class_edge_1a9135fbe9d02327917295da09c9241288" kindref="member">coord</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.x_measure<sp/>=<sp/>v.<ref refid="class_edge_1a9135fbe9d02327917295da09c9241288" kindref="member">coord</ref><sp/>-<sp/>x_ext.<ref refid="class_interval_1a097694b6079fdb99d67561962c163cdc" kindref="member">bottom</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S_.insert(s);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;###<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_edge" kindref="compound">Edge&lt;T&gt;</ref><sp/>v<sp/>:<sp/>V)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>v.<ref refid="class_edge_1a9135fbe9d02327917295da09c9241288" kindref="member">coord</ref><sp/>&lt;&lt;<sp/>v.<ref refid="class_edge_1a9c9ddeaf613656905768aee53fa83bc2" kindref="member">side</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_stripe" kindref="compound">Stripe&lt;T&gt;</ref><sp/>s<sp/>:<sp/>S)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s.y_interval.bottom<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s.y_interval.top<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s.x_measure<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>x_ext.<ref refid="class_interval_1a097694b6079fdb99d67561962c163cdc" kindref="member">bottom</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x_ext.<ref refid="class_interval_1a815cb5fb627ed4553c42b987d41e2fa6" kindref="member">top</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;L:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>i<sp/>:<sp/>L)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>i.bottom<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i.top<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;R:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>i<sp/>:<sp/>R)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>i.bottom<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i.top<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Divide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;Edge&lt;T&gt;&gt;<sp/>V1(V.begin(),<sp/>V.begin()<sp/>+<sp/>V.size()<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;Edge&lt;T&gt;&gt;<sp/>V2(V.begin()<sp/>+<sp/>V.size()<sp/>/<sp/>2,<sp/>V.end());</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>x_m<sp/>=<sp/>(*(V2.begin())).coord;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for(Edge&lt;T&gt;<sp/>v<sp/>:<sp/>V)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>v.coord<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Conquer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>x_ext1(x_ext.<ref refid="class_interval_1a097694b6079fdb99d67561962c163cdc" kindref="member">bottom</ref>,<sp/>x_m);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;Interval&lt;T&gt;&gt;<sp/>L1,<sp/>R1;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;T&gt;<sp/>P1;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;Stripe&lt;T&gt;&gt;<sp/>S1<sp/>=<sp/><ref refid="contour_8cpp_1a2e69c2e37ddc89d4ae7d69cdfec51695" kindref="member">STRIPES</ref>(V1,<sp/>x_ext1,<sp/>L1,<sp/>R1,<sp/>P1);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>x_ext2(x_m,<sp/>x_ext.<ref refid="class_interval_1a815cb5fb627ed4553c42b987d41e2fa6" kindref="member">top</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;Interval&lt;T&gt;&gt;<sp/>L2,<sp/>R2;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;T&gt;<sp/>P2;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;Stripe&lt;T&gt;&gt;<sp/>S2<sp/>=<sp/><ref refid="contour_8cpp_1a2e69c2e37ddc89d4ae7d69cdfec51695" kindref="member">STRIPES</ref>(V2,<sp/>x_ext2,<sp/>L2,<sp/>R2,<sp/>P2);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>LR<sp/>=<sp/>L1<sp/>^<sp/>R2;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/>(L1<sp/>-<sp/>LR)<sp/>+<sp/>L2;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>=<sp/>R1<sp/>+<sp/>(R2<sp/>-<sp/>LR);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P<sp/>=<sp/>P1<sp/>+<sp/>P2;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for(Edge&lt;T&gt;<sp/>v<sp/>:<sp/>V)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>v.coord<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>x_ext.bottom<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>x_ext.top<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;L:<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for(Interval&lt;T&gt;<sp/>i<sp/>:<sp/>L)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>i.bottom<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>i.top<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;\nR:<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for(Interval&lt;T&gt;<sp/>i<sp/>:<sp/>R)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>i.bottom<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>i.top<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;Stripe&lt;T&gt;&gt;<sp/>S_left<sp/>=<sp/><ref refid="contour_8cpp_1a4be3178befc1a7813b7717a591ceb97e" kindref="member">Copy</ref>(S1,<sp/>P,<sp/>x_ext1);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;Stripe&lt;T&gt;&gt;<sp/>S_right<sp/>=<sp/><ref refid="contour_8cpp_1a4be3178befc1a7813b7717a591ceb97e" kindref="member">Copy</ref>(S2,<sp/>P,<sp/>x_ext2);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="contour_8cpp_1aee8d30ff2a8b49953ed35316b1160111" kindref="member">Blacken</ref>(S_left,<sp/>R2<sp/>-<sp/>LR);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="contour_8cpp_1aee8d30ff2a8b49953ed35316b1160111" kindref="member">Blacken</ref>(S_right,<sp/>L1<sp/>-<sp/>LR);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S<sp/>=<sp/><ref refid="contour_8cpp_1a88921521574b40fbfbc4177d807aab00" kindref="member">Concat</ref>(S_left,<sp/>S_right,<sp/>P,<sp/>x_ext);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for(Edge&lt;T&gt;<sp/>v<sp/>:<sp/>V)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>v.coord<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>x_ext.bottom<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>x_m<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>x_ext.top<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;:&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deb(x_m);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_edge" kindref="compound">Edge&lt;T&gt;</ref><sp/>v<sp/>:<sp/>V)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>v.<ref refid="class_edge_1a9135fbe9d02327917295da09c9241288" kindref="member">coord</ref><sp/>&lt;&lt;<sp/>v.<ref refid="class_edge_1a9c9ddeaf613656905768aee53fa83bc2" kindref="member">side</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_stripe" kindref="compound">Stripe&lt;T&gt;</ref><sp/>s<sp/>:<sp/>S)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s.y_interval.bottom<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s.y_interval.top<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s.x_measure<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>x_ext.<ref refid="class_interval_1a097694b6079fdb99d67561962c163cdc" kindref="member">bottom</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x_m<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x_ext.<ref refid="class_interval_1a815cb5fb627ed4553c42b987d41e2fa6" kindref="member">top</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;L:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>i<sp/>:<sp/>L)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>i.bottom<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i.top<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;R:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>i<sp/>:<sp/>R)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>i.bottom<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i.top<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S;</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal">tplate</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Stripe&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="contour_8cpp_1a26986a52c53e5df8a4066ffb9f3e4f61" kindref="member">RECTANGLE_DAC</ref>(set&lt;<ref refid="class_rectangle" kindref="compound">Rectangle&lt;T&gt;</ref>&gt;<sp/>RECT)</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;Enter<sp/>DAC\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Edge&lt;T&gt;&gt;<sp/>VRX;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_rectangle" kindref="compound">Rectangle&lt;T&gt;</ref><sp/>R<sp/>:<sp/>RECT)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_edge" kindref="compound">Edge&lt;T&gt;</ref><sp/>leftVerticalEdge(R.y_interval,<sp/>R.x_left,<sp/></highlight><highlight class="stringliteral">&quot;left&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_edge" kindref="compound">Edge&lt;T&gt;</ref><sp/>rightVerticalEdge(R.y_interval,<sp/>R.x_right,<sp/></highlight><highlight class="stringliteral">&quot;right&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VRX.push_back(leftVerticalEdge);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VRX.push_back(rightVerticalEdge);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>sort(VRX.begin(),<sp/>VRX.end());</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_interval" kindref="compound">Interval&lt;T&gt;</ref><sp/>x_ext(-inf&lt;T&gt;,<sp/>inf&lt;T&gt;);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Interval&lt;T&gt;&gt;<sp/>L,<sp/>R;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;T&gt;<sp/>P;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="contour_8cpp_1a2e69c2e37ddc89d4ae7d69cdfec51695" kindref="member">STRIPES</ref>(VRX,<sp/>x_ext,<sp/>L,<sp/>R,<sp/>P);</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ios_base::sync_with_stdio(false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cin.tie(NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Rectangle&lt;long<sp/>double&gt;&gt;<sp/>input;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>ifstream<sp/>fin;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>fin.open(argv[1]);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>fin<sp/>&gt;&gt;<sp/>n;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n--)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/>x2,<sp/>y1,<sp/>y2;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fin<sp/>&gt;&gt;<sp/>x1<sp/>&gt;&gt;<sp/>x2<sp/>&gt;&gt;<sp/>y1<sp/>&gt;&gt;<sp/>y2;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_rectangle" kindref="compound">Rectangle&lt;long double&gt;</ref><sp/>r(x1,<sp/>x2,<sp/>y1,<sp/>y2);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.insert(r);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fout1<sp/>&lt;&lt;<sp/>x1<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>x2<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>y1<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>y2<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>fin.close();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set&lt;Point&lt;long<sp/>double&gt;&gt;<sp/>output<sp/>=<sp/>unionArea(input);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(auto<sp/>p<sp/>:<sp/>output)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>p.x<sp/>&lt;&lt;<sp/>&quot;<sp/>-<sp/>&quot;<sp/>&lt;&lt;<sp/>p.y<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Stripe&lt;long<sp/>double&gt;&gt;<sp/>S<sp/>=<sp/><ref refid="contour_8cpp_1a26986a52c53e5df8a4066ffb9f3e4f61" kindref="member">RECTANGLE_DAC</ref>(input);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>area<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>ofstream<sp/>fout2;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>fout2.open(</highlight><highlight class="stringliteral">&quot;stripes.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_stripe" kindref="compound">Stripe&lt;long double&gt;</ref><sp/>s<sp/>:<sp/>S)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.y_interval.bottom<sp/>!=<sp/>-inf&lt;long<sp/>double&gt;<sp/>and<sp/>s.y_interval.top<sp/>!=<sp/>inf&lt;long<sp/>double&gt;)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>+=<sp/>s.x_measure<sp/>*<sp/>(s.y_interval.top<sp/>-<sp/>s.y_interval.bottom);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>s.x_measure<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fout2<sp/>&lt;&lt;<sp/>s.x_interval.bottom<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s.x_interval.top</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s.y_interval.bottom<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s.y_interval.top</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s.x_measure<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>fout2.close();</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Area<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>area;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cmd[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;python<sp/>measure_visual.py<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>strcat(cmd,<sp/>argv[1]);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>system(cmd);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/measure.cpp"/>
  </compounddef>
</doxygen>
